#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SAMEngine
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBEngine")]
	public partial class DBEngineDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_subFolder(tbl_subFolder instance);
    partial void Updatetbl_subFolder(tbl_subFolder instance);
    partial void Deletetbl_subFolder(tbl_subFolder instance);
    partial void Inserttbl_File(tbl_File instance);
    partial void Updatetbl_File(tbl_File instance);
    partial void Deletetbl_File(tbl_File instance);
    partial void Inserttbl_Folder(tbl_Folder instance);
    partial void Updatetbl_Folder(tbl_Folder instance);
    partial void Deletetbl_Folder(tbl_Folder instance);
    #endregion
		
		public DBEngineDataContext() : 
				base(global::SAMEngine.Properties.Settings.Default.DBEngineConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBEngineDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBEngineDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBEngineDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBEngineDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_subFolder> tbl_subFolders
		{
			get
			{
				return this.GetTable<tbl_subFolder>();
			}
		}
		
		public System.Data.Linq.Table<tbl_File> tbl_Files
		{
			get
			{
				return this.GetTable<tbl_File>();
			}
		}
		
		public System.Data.Linq.Table<tbl_Folder> tbl_Folders
		{
			get
			{
				return this.GetTable<tbl_Folder>();
			}
		}
		
		public System.Data.Linq.Table<jmlStatFolder> jmlStatFolders
		{
			get
			{
				return this.GetTable<jmlStatFolder>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_subFolder")]
	public partial class tbl_subFolder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _idFolder;
		
		private string _namaSubFolder;
		
		private EntitySet<tbl_File> _tbl_Files;
		
		private EntityRef<tbl_Folder> _tbl_Folder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnidFolderChanging(System.Nullable<long> value);
    partial void OnidFolderChanged();
    partial void OnnamaSubFolderChanging(string value);
    partial void OnnamaSubFolderChanged();
    #endregion
		
		public tbl_subFolder()
		{
			this._tbl_Files = new EntitySet<tbl_File>(new Action<tbl_File>(this.attach_tbl_Files), new Action<tbl_File>(this.detach_tbl_Files));
			this._tbl_Folder = default(EntityRef<tbl_Folder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idFolder", DbType="BigInt")]
		public System.Nullable<long> idFolder
		{
			get
			{
				return this._idFolder;
			}
			set
			{
				if ((this._idFolder != value))
				{
					if (this._tbl_Folder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidFolderChanging(value);
					this.SendPropertyChanging();
					this._idFolder = value;
					this.SendPropertyChanged("idFolder");
					this.OnidFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namaSubFolder", DbType="VarChar(100)")]
		public string namaSubFolder
		{
			get
			{
				return this._namaSubFolder;
			}
			set
			{
				if ((this._namaSubFolder != value))
				{
					this.OnnamaSubFolderChanging(value);
					this.SendPropertyChanging();
					this._namaSubFolder = value;
					this.SendPropertyChanged("namaSubFolder");
					this.OnnamaSubFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_subFolder_tbl_File", Storage="_tbl_Files", ThisKey="id", OtherKey="idSubFolder")]
		public EntitySet<tbl_File> tbl_Files
		{
			get
			{
				return this._tbl_Files;
			}
			set
			{
				this._tbl_Files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Folder_tbl_subFolder", Storage="_tbl_Folder", ThisKey="idFolder", OtherKey="id", IsForeignKey=true)]
		public tbl_Folder tbl_Folder
		{
			get
			{
				return this._tbl_Folder.Entity;
			}
			set
			{
				tbl_Folder previousValue = this._tbl_Folder.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Folder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Folder.Entity = null;
						previousValue.tbl_subFolders.Remove(this);
					}
					this._tbl_Folder.Entity = value;
					if ((value != null))
					{
						value.tbl_subFolders.Add(this);
						this._idFolder = value.id;
					}
					else
					{
						this._idFolder = default(Nullable<long>);
					}
					this.SendPropertyChanged("tbl_Folder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_Files(tbl_File entity)
		{
			this.SendPropertyChanging();
			entity.tbl_subFolder = this;
		}
		
		private void detach_tbl_Files(tbl_File entity)
		{
			this.SendPropertyChanging();
			entity.tbl_subFolder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_File")]
	public partial class tbl_File : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<long> _idSubFolder;
		
		private string _kunciSAM;
		
		private string _isiFile;
		
		private string _namaFile;
		
		private string _path;
		
		private string _noKartu;
		
		private System.Nullable<System.DateTime> _tglInput;
		
		private System.Nullable<bool> _status;
		
		private EntityRef<tbl_subFolder> _tbl_subFolder;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnidSubFolderChanging(System.Nullable<long> value);
    partial void OnidSubFolderChanged();
    partial void OnkunciSAMChanging(string value);
    partial void OnkunciSAMChanged();
    partial void OnisiFileChanging(string value);
    partial void OnisiFileChanged();
    partial void OnnamaFileChanging(string value);
    partial void OnnamaFileChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    partial void OnnoKartuChanging(string value);
    partial void OnnoKartuChanged();
    partial void OntglInputChanging(System.Nullable<System.DateTime> value);
    partial void OntglInputChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    #endregion
		
		public tbl_File()
		{
			this._tbl_subFolder = default(EntityRef<tbl_subFolder>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSubFolder", DbType="BigInt")]
		public System.Nullable<long> idSubFolder
		{
			get
			{
				return this._idSubFolder;
			}
			set
			{
				if ((this._idSubFolder != value))
				{
					if (this._tbl_subFolder.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSubFolderChanging(value);
					this.SendPropertyChanging();
					this._idSubFolder = value;
					this.SendPropertyChanged("idSubFolder");
					this.OnidSubFolderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kunciSAM", DbType="VarChar(200)")]
		public string kunciSAM
		{
			get
			{
				return this._kunciSAM;
			}
			set
			{
				if ((this._kunciSAM != value))
				{
					this.OnkunciSAMChanging(value);
					this.SendPropertyChanging();
					this._kunciSAM = value;
					this.SendPropertyChanged("kunciSAM");
					this.OnkunciSAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isiFile", DbType="VarChar(200)")]
		public string isiFile
		{
			get
			{
				return this._isiFile;
			}
			set
			{
				if ((this._isiFile != value))
				{
					this.OnisiFileChanging(value);
					this.SendPropertyChanging();
					this._isiFile = value;
					this.SendPropertyChanged("isiFile");
					this.OnisiFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_namaFile", DbType="VarChar(250)")]
		public string namaFile
		{
			get
			{
				return this._namaFile;
			}
			set
			{
				if ((this._namaFile != value))
				{
					this.OnnamaFileChanging(value);
					this.SendPropertyChanging();
					this._namaFile = value;
					this.SendPropertyChanged("namaFile");
					this.OnnamaFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_noKartu", DbType="VarChar(100)")]
		public string noKartu
		{
			get
			{
				return this._noKartu;
			}
			set
			{
				if ((this._noKartu != value))
				{
					this.OnnoKartuChanging(value);
					this.SendPropertyChanging();
					this._noKartu = value;
					this.SendPropertyChanged("noKartu");
					this.OnnoKartuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tglInput", DbType="DateTime")]
		public System.Nullable<System.DateTime> tglInput
		{
			get
			{
				return this._tglInput;
			}
			set
			{
				if ((this._tglInput != value))
				{
					this.OntglInputChanging(value);
					this.SendPropertyChanging();
					this._tglInput = value;
					this.SendPropertyChanged("tglInput");
					this.OntglInputChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_subFolder_tbl_File", Storage="_tbl_subFolder", ThisKey="idSubFolder", OtherKey="id", IsForeignKey=true)]
		public tbl_subFolder tbl_subFolder
		{
			get
			{
				return this._tbl_subFolder.Entity;
			}
			set
			{
				tbl_subFolder previousValue = this._tbl_subFolder.Entity;
				if (((previousValue != value) 
							|| (this._tbl_subFolder.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_subFolder.Entity = null;
						previousValue.tbl_Files.Remove(this);
					}
					this._tbl_subFolder.Entity = value;
					if ((value != null))
					{
						value.tbl_Files.Add(this);
						this._idSubFolder = value.id;
					}
					else
					{
						this._idSubFolder = default(Nullable<long>);
					}
					this.SendPropertyChanged("tbl_subFolder");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Folder")]
	public partial class tbl_Folder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private string _nama;
		
		private EntitySet<tbl_subFolder> _tbl_subFolders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnnamaChanging(string value);
    partial void OnnamaChanged();
    #endregion
		
		public tbl_Folder()
		{
			this._tbl_subFolders = new EntitySet<tbl_subFolder>(new Action<tbl_subFolder>(this.attach_tbl_subFolders), new Action<tbl_subFolder>(this.detach_tbl_subFolders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nama", DbType="VarChar(50)")]
		public string nama
		{
			get
			{
				return this._nama;
			}
			set
			{
				if ((this._nama != value))
				{
					this.OnnamaChanging(value);
					this.SendPropertyChanging();
					this._nama = value;
					this.SendPropertyChanged("nama");
					this.OnnamaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Folder_tbl_subFolder", Storage="_tbl_subFolders", ThisKey="id", OtherKey="idFolder")]
		public EntitySet<tbl_subFolder> tbl_subFolders
		{
			get
			{
				return this._tbl_subFolders;
			}
			set
			{
				this._tbl_subFolders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_subFolders(tbl_subFolder entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Folder = this;
		}
		
		private void detach_tbl_subFolders(tbl_subFolder entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Folder = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.jmlStatFolder")]
	public partial class jmlStatFolder
	{
		
		private string _nama;
		
		private System.Nullable<int> _jml;
		
		public jmlStatFolder()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nama", DbType="VarChar(50)")]
		public string nama
		{
			get
			{
				return this._nama;
			}
			set
			{
				if ((this._nama != value))
				{
					this._nama = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_jml", DbType="Int")]
		public System.Nullable<int> jml
		{
			get
			{
				return this._jml;
			}
			set
			{
				if ((this._jml != value))
				{
					this._jml = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
